/**
 *  introspectedTable.getFullyQualifiedTable().getComment()
 * UserLevelQueryHelper.java
 * Copyright(C) 2015-2015 xxxxxx公司
 * All rights reserved.
 * -----------------------------------------------
 * 2017-08-28 Created
 */
package java;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class UserLevelQueryHelper {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public UserLevelQueryHelper() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trade_user_level
     *
     * @mbggenerated Mon Aug 28 11:46:45 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * 聚诚通会员等级表
     * 
     * @author 菠萝大象
     * @version 1.0 2017-08-28
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeIsNull() {
            addCriterion("user_level_code is null");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeIsNotNull() {
            addCriterion("user_level_code is not null");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeEqualTo(Short value) {
            addCriterion("user_level_code =", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeNotEqualTo(Short value) {
            addCriterion("user_level_code <>", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeGreaterThan(Short value) {
            addCriterion("user_level_code >", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeGreaterThanOrEqualTo(Short value) {
            addCriterion("user_level_code >=", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeLessThan(Short value) {
            addCriterion("user_level_code <", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeLessThanOrEqualTo(Short value) {
            addCriterion("user_level_code <=", value, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeIn(List<Short> values) {
            addCriterion("user_level_code in", values, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeNotIn(List<Short> values) {
            addCriterion("user_level_code not in", values, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeBetween(Short value1, Short value2) {
            addCriterion("user_level_code between", value1, value2, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelCodeNotBetween(Short value1, Short value2) {
            addCriterion("user_level_code not between", value1, value2, "userLevelCode");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameIsNull() {
            addCriterion("user_level_name is null");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameIsNotNull() {
            addCriterion("user_level_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameEqualTo(String value) {
            addCriterion("user_level_name =", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameNotEqualTo(String value) {
            addCriterion("user_level_name <>", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameGreaterThan(String value) {
            addCriterion("user_level_name >", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_level_name >=", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameLessThan(String value) {
            addCriterion("user_level_name <", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameLessThanOrEqualTo(String value) {
            addCriterion("user_level_name <=", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameLike(String value) {
            addCriterion("user_level_name like", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameNotLike(String value) {
            addCriterion("user_level_name not like", value, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameIn(List<String> values) {
            addCriterion("user_level_name in", values, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameNotIn(List<String> values) {
            addCriterion("user_level_name not in", values, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameBetween(String value1, String value2) {
            addCriterion("user_level_name between", value1, value2, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameNotBetween(String value1, String value2) {
            addCriterion("user_level_name not between", value1, value2, "userLevelName");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountIsNull() {
            addCriterion("receive_niche_count is null");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountIsNotNull() {
            addCriterion("receive_niche_count is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountEqualTo(Short value) {
            addCriterion("receive_niche_count =", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountNotEqualTo(Short value) {
            addCriterion("receive_niche_count <>", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountGreaterThan(Short value) {
            addCriterion("receive_niche_count >", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountGreaterThanOrEqualTo(Short value) {
            addCriterion("receive_niche_count >=", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountLessThan(Short value) {
            addCriterion("receive_niche_count <", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountLessThanOrEqualTo(Short value) {
            addCriterion("receive_niche_count <=", value, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountIn(List<Short> values) {
            addCriterion("receive_niche_count in", values, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountNotIn(List<Short> values) {
            addCriterion("receive_niche_count not in", values, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountBetween(Short value1, Short value2) {
            addCriterion("receive_niche_count between", value1, value2, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveNicheCountNotBetween(Short value1, Short value2) {
            addCriterion("receive_niche_count not between", value1, value2, "receiveNicheCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountIsNull() {
            addCriterion("receive_goods_count is null");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountIsNotNull() {
            addCriterion("receive_goods_count is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountEqualTo(Short value) {
            addCriterion("receive_goods_count =", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountNotEqualTo(Short value) {
            addCriterion("receive_goods_count <>", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountGreaterThan(Short value) {
            addCriterion("receive_goods_count >", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountGreaterThanOrEqualTo(Short value) {
            addCriterion("receive_goods_count >=", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountLessThan(Short value) {
            addCriterion("receive_goods_count <", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountLessThanOrEqualTo(Short value) {
            addCriterion("receive_goods_count <=", value, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountIn(List<Short> values) {
            addCriterion("receive_goods_count in", values, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountNotIn(List<Short> values) {
            addCriterion("receive_goods_count not in", values, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountBetween(Short value1, Short value2) {
            addCriterion("receive_goods_count between", value1, value2, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andReceiveGoodsCountNotBetween(Short value1, Short value2) {
            addCriterion("receive_goods_count not between", value1, value2, "receiveGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountIsNull() {
            addCriterion("push_goods_count is null");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountIsNotNull() {
            addCriterion("push_goods_count is not null");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountEqualTo(Short value) {
            addCriterion("push_goods_count =", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountNotEqualTo(Short value) {
            addCriterion("push_goods_count <>", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountGreaterThan(Short value) {
            addCriterion("push_goods_count >", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountGreaterThanOrEqualTo(Short value) {
            addCriterion("push_goods_count >=", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountLessThan(Short value) {
            addCriterion("push_goods_count <", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountLessThanOrEqualTo(Short value) {
            addCriterion("push_goods_count <=", value, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountIn(List<Short> values) {
            addCriterion("push_goods_count in", values, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountNotIn(List<Short> values) {
            addCriterion("push_goods_count not in", values, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountBetween(Short value1, Short value2) {
            addCriterion("push_goods_count between", value1, value2, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPushGoodsCountNotBetween(Short value1, Short value2) {
            addCriterion("push_goods_count not between", value1, value2, "pushGoodsCount");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andUserLevelNameLikeInsensitive(String value) {
            addCriterion("upper(user_level_name) like", value.toUpperCase(), "userLevelName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trade_user_level
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 28 11:46:45 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * 聚诚通会员等级表
     * 
     * @author 菠萝大象
     * @version 1.0 2017-08-28
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}